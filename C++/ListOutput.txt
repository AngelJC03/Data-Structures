//I chose to structure my Linked List output almost as an actual Linked List visualization

//below is a linked list created using a vector constructor

Linked List: 
7 next -> 49 next -> 73 next -> 58 next -> 30 next -> 72 next -> 44 next -> 78 next -> 23 next -> null 

//we will remove the value 7 from the list

Linked List: 
49 next -> 73 next -> 58 next -> 30 next -> 72 next -> 44 next -> 78 next -> 23 next -> null 

//we have removed 58 73 from the list as well

Linked List: 
49 next -> 58 next -> 30 next -> 72 next -> 44 next -> 78 next -> 23 next -> null 

//this is the current size of the list (number of elements)

7

//I will now insert using the index 9, in my implementation, if the index of greater than the 
//number of elements in the list, the value is appended to the end of the list.

Linked List: 
49 next -> 58 next -> 13 next -> 30 next -> 72 next -> 44 next -> 78 next -> 23 next -> 400 next -> null 

//prepending the value 3 and appending the value 11.

Linked List: 
3 next -> 49 next -> 58 next -> 13 next -> 30 next -> 72 next -> 44 next -> 78 next -> 23 next -> 400 next -> 11 next -> null 

//showcasing search algorithms

11 has been found
 1 is not in the list

//showcasing merge sort algorithm.

Linked List: 
3 next -> 11 next -> 13 next -> 23 next -> 30 next -> 44 next -> 49 next -> 58 next -> 72 next -> 78 next -> 400 next -> null 

